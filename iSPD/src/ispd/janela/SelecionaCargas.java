/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SelecionaCargas.java
 *
 * Created on 31/05/2011, 10:07:56
 */
package ispd.janela;

import ispd.motor.carga.CargaForNode;
import ispd.motor.carga.CargaRandom;
import ispd.motor.carga.CargaTaskNode;
import java.util.HashSet;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import ispd.motor.carga.GerarCarga;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;

/**
 *
 * @author denison_usuario
 */
public class SelecionaCargas extends javax.swing.JDialog {

    /** Creates new form SelecionaCargas */
    public SelecionaCargas(java.awt.Frame parent, boolean modal, Vector<String> users, Vector<String> masters, GerarCarga gerarcarga, ResourceBundle palavras) {
        super(parent, modal);
        this.palavras = palavras;
        this.usuarios = users;
        this.escalonadores = masters;
        this.carga = gerarcarga;
        this.tabelaLinha = new Vector<Vector>();
        this.tabelaColuna.add(palavras.getString("Application"));
        this.tabelaColuna.add(palavras.getString("User"));
        this.tabelaColuna.add(palavras.getString("Scheduler"));
        this.tabelaColuna.add(palavras.getString("Tasks"));
        this.tabelaColuna.add(palavras.getString("Maximum computing"));
        this.tabelaColuna.add(palavras.getString("Minimum computing"));
        this.tabelaColuna.add(palavras.getString("Maximum communication"));
        this.tabelaColuna.add(palavras.getString("Minimum communication"));
        initComponents();
        this.setValores(gerarcarga);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelRandom = new javax.swing.JPanel();
        jLabelNumberOfTasks = new javax.swing.JLabel();
        jSpinnerNumTarefas = new javax.swing.JSpinner();
        jSpinnerMinComputacao = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSpinnerMinComunicacao = new javax.swing.JSpinner();
        jSpinnerTimeOfArrival = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSpinnerAverageComputacao = new javax.swing.JSpinner();
        jSpinnerAverageComunicacao = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jSpinnerMaxComputacao = new javax.swing.JSpinner();
        jSpinnerMaxComunicacao = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jSpinnerProbabilityComputacao = new javax.swing.JSpinner();
        jSpinnerProbabilityComunicacao = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanelForNode = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jComboBoxUsers = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jComboBoxEscalonadores = new javax.swing.JComboBox();
        jLabelNumberOfTasks1 = new javax.swing.JLabel();
        jSpinnerNumTarefasNo = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jSpinnerMaxCompNo = new javax.swing.JSpinner();
        jSpinnerMinCompNo = new javax.swing.JSpinner();
        jSpinnerMinComuNo = new javax.swing.JSpinner();
        jSpinnerMaxComuNo = new javax.swing.JSpinner();
        jButtonAddTabela = new javax.swing.JButton();
        jScrollPaneTabela = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanelModo = new javax.swing.JPanel();
        jRadioButtonTraces = new javax.swing.JRadioButton();
        jRadioButtonForNode = new javax.swing.JRadioButton();
        jRadioButtonRandom = new javax.swing.JRadioButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonAddUser = new javax.swing.JButton();
        jScrollPaneSelecionado = new javax.swing.JScrollPane();
        jButtonOK1 = new javax.swing.JButton();

        jPanelRandom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelRandom.setMaximumSize(null);
        jPanelRandom.setPreferredSize(new java.awt.Dimension(500, 300));

        jLabelNumberOfTasks.setText(palavras.getString("Number of tasks")); // NOI18N

        jSpinnerNumTarefas.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jSpinnerMinComputacao.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel1.setText(palavras.getString("Computational size")); // NOI18N

        jLabel2.setText(palavras.getString("Communication size")); // NOI18N

        jLabel3.setText(palavras.getString("Time of arrival")); // NOI18N

        jSpinnerMinComunicacao.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jSpinnerTimeOfArrival.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel4.setText(palavras.getString("Minimum")); // NOI18N

        jLabel5.setText(palavras.getString("Average")); // NOI18N

        jSpinnerAverageComputacao.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jSpinnerAverageComunicacao.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel6.setText(palavras.getString("Maximum")); // NOI18N

        jSpinnerMaxComputacao.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jSpinnerMaxComunicacao.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel7.setText(palavras.getString("Probability")); // NOI18N

        jSpinnerProbabilityComputacao.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(1.0f)));

        jSpinnerProbabilityComunicacao.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(1.0f)));

        jLabel9.setText(palavras.getString("MFLOPS")); // NOI18N

        jLabel10.setText(palavras.getString("Mbits")); // NOI18N

        jLabel11.setText(palavras.getString("Seconds")); // NOI18N

        javax.swing.GroupLayout jPanelRandomLayout = new javax.swing.GroupLayout(jPanelRandom);
        jPanelRandom.setLayout(jPanelRandomLayout);
        jPanelRandomLayout.setHorizontalGroup(
            jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRandomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelNumberOfTasks, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinnerNumTarefas, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerTimeOfArrival, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                    .addComponent(jSpinnerMinComunicacao, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                    .addComponent(jSpinnerMinComputacao, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRandomLayout.createSequentialGroup()
                        .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSpinnerAverageComunicacao, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                            .addComponent(jSpinnerAverageComputacao)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSpinnerMaxComunicacao)
                            .addComponent(jSpinnerMaxComputacao, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSpinnerProbabilityComunicacao)
                            .addComponent(jSpinnerProbabilityComputacao, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)))
                    .addComponent(jLabel11))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanelRandomLayout.setVerticalGroup(
            jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRandomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelRandomLayout.createSequentialGroup()
                        .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNumberOfTasks)
                            .addComponent(jSpinnerNumTarefas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addGap(15, 15, 15)
                        .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jSpinnerMinComputacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jSpinnerMinComunicacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelRandomLayout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(15, 15, 15)
                            .addComponent(jSpinnerMaxComputacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jSpinnerMaxComunicacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelRandomLayout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(15, 15, 15)
                            .addComponent(jSpinnerAverageComputacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jSpinnerAverageComunicacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelRandomLayout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(15, 15, 15)
                            .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jSpinnerProbabilityComputacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jSpinnerProbabilityComunicacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10)))))
                .addGap(18, 18, 18)
                .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jSpinnerTimeOfArrival, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11))
                .addContainerGap(138, Short.MAX_VALUE))
        );

        jPanelForNode.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelForNode.setMaximumSize(null);
        jPanelForNode.setPreferredSize(new java.awt.Dimension(500, 300));

        jLabel8.setText(palavras.getString("User")); // NOI18N

        jComboBoxUsers.setModel(new DefaultComboBoxModel(usuarios));

        jLabel12.setText(palavras.getString("Scheduler")); // NOI18N

        jComboBoxEscalonadores.setModel(new DefaultComboBoxModel(escalonadores));

        jLabelNumberOfTasks1.setText(palavras.getString("Number of tasks")); // NOI18N

        jSpinnerNumTarefasNo.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel13.setText(palavras.getString("Computational")); // NOI18N

        jLabel14.setText(palavras.getString("Communication")); // NOI18N

        jSpinnerMaxCompNo.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(1.0f)));
        jSpinnerMaxCompNo.setBorder(null);

        jSpinnerMinCompNo.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(1.0f)));
        jSpinnerMinCompNo.setBorder(null);

        jSpinnerMinComuNo.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(1.0f)));
        jSpinnerMinComuNo.setBorder(null);

        jSpinnerMaxComuNo.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(1.0f)));
        jSpinnerMaxComuNo.setBorder(null);

        jButtonAddTabela.setText(palavras.getString("Add")); // NOI18N
        jButtonAddTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddTabelaActionPerformed(evt);
            }
        });

        jTable1.setModel(new DefaultTableModel(this.tabelaLinha,this.tabelaColuna));
        jScrollPaneTabela.setViewportView(jTable1);

        jLabel15.setText(palavras.getString("Maximum")); // NOI18N

        jLabel16.setText(palavras.getString("Minimum")); // NOI18N

        javax.swing.GroupLayout jPanelForNodeLayout = new javax.swing.GroupLayout(jPanelForNode);
        jPanelForNode.setLayout(jPanelForNodeLayout);
        jPanelForNodeLayout.setHorizontalGroup(
            jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelForNodeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPaneTabela, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelForNodeLayout.createSequentialGroup()
                        .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelForNodeLayout.createSequentialGroup()
                                .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxUsers, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxEscalonadores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel12))
                                .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelForNodeLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabelNumberOfTasks1))
                                    .addGroup(jPanelForNodeLayout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(jSpinnerNumTarefasNo, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))))
                            .addComponent(jButtonAddTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelForNodeLayout.createSequentialGroup()
                                .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSpinnerMaxCompNo, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addComponent(jSpinnerMinCompNo)))
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinnerMaxComuNo, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSpinnerMinComuNo, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE))))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanelForNodeLayout.setVerticalGroup(
            jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelForNodeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel12)
                    .addComponent(jLabelNumberOfTasks1)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxEscalonadores, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerNumTarefasNo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jSpinnerMaxCompNo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerMaxComuNo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(jSpinnerMinCompNo, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                        .addComponent(jSpinnerMinComuNo, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                    .addComponent(jButtonAddTabela))
                .addGap(18, 18, 18)
                .addComponent(jScrollPaneTabela, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(palavras.getString("Random Workloads")); // NOI18N
        setMinimumSize(new java.awt.Dimension(550, 450));
        setResizable(false);

        jPanelModo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), palavras.getString("Insertion mode for the workloads"))); // NOI18N
        jPanelModo.setMaximumSize(new java.awt.Dimension(500, 60));
        jPanelModo.setMinimumSize(new java.awt.Dimension(500, 60));
        jPanelModo.setPreferredSize(new java.awt.Dimension(500, 60));

        jRadioButtonTraces.setText(palavras.getString("Traces")); // NOI18N
        jRadioButtonTraces.setEnabled(false);
        jRadioButtonTraces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonTracesActionPerformed(evt);
            }
        });

        jRadioButtonForNode.setText(palavras.getString("For each node")); // NOI18N
        jRadioButtonForNode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonForNodeActionPerformed(evt);
            }
        });

        jRadioButtonRandom.setSelected(true);
        jRadioButtonRandom.setText(palavras.getString("Random")); // NOI18N
        jRadioButtonRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonRandomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelModoLayout = new javax.swing.GroupLayout(jPanelModo);
        jPanelModo.setLayout(jPanelModoLayout);
        jPanelModoLayout.setHorizontalGroup(
            jPanelModoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelModoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButtonRandom)
                .addGap(18, 18, 18)
                .addComponent(jRadioButtonForNode)
                .addGap(18, 18, 18)
                .addComponent(jRadioButtonTraces)
                .addContainerGap(231, Short.MAX_VALUE))
        );
        jPanelModoLayout.setVerticalGroup(
            jPanelModoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelModoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelModoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jRadioButtonRandom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRadioButtonForNode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRadioButtonTraces))
                .addContainerGap())
        );

        jButtonCancelar.setText(palavras.getString("Cancel")); // NOI18N
        jButtonCancelar.setMaximumSize(new java.awt.Dimension(80, 30));
        jButtonCancelar.setMinimumSize(new java.awt.Dimension(80, 30));
        jButtonCancelar.setPreferredSize(new java.awt.Dimension(80, 30));
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonAddUser.setText(palavras.getString("Add user")); // NOI18N
        jButtonAddUser.setPreferredSize(new java.awt.Dimension(80, 30));
        jButtonAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddUserActionPerformed(evt);
            }
        });

        jScrollPaneSelecionado.setPreferredSize(new java.awt.Dimension(500, 300));

        jButtonOK1.setText(palavras.getString("OK")); // NOI18N
        jButtonOK1.setPreferredSize(new java.awt.Dimension(80, 30));
        jButtonOK1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOK1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonOK1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPaneSelecionado, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                    .addComponent(jPanelModo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelModo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonOK1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonRandomActionPerformed
        // TODO add your handling code here:
        setTipo(GerarCarga.RANDOM);
    }//GEN-LAST:event_jRadioButtonRandomActionPerformed

    private void jRadioButtonForNodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonForNodeActionPerformed
        // TODO add your handling code here:
        setTipo(GerarCarga.FORNODE);
    }//GEN-LAST:event_jRadioButtonForNodeActionPerformed

    private void jRadioButtonTracesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonTracesActionPerformed
        // TODO add your handling code here:
        setTipo(GerarCarga.TRACE);
    }//GEN-LAST:event_jRadioButtonTracesActionPerformed

    private void jButtonAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddUserActionPerformed
        // TODO add your handling code here:
        String newUser = JOptionPane.showInputDialog(this, palavras.getString("Enter the name"), palavras.getString("Add user"), JOptionPane.QUESTION_MESSAGE);
        if (!usuarios.contains(newUser) && !newUser.equals("")) {
            usuarios.add(newUser);
        }
    }//GEN-LAST:event_jButtonAddUserActionPerformed

    private void jButtonAddTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddTabelaActionPerformed
        // TODO add your handling code here:
        Vector linha = new Vector(8);
        linha.add("application" + tabelaIndex);
        tabelaIndex++;
        linha.add(jComboBoxUsers.getSelectedItem());
        linha.add(jComboBoxEscalonadores.getSelectedItem());
        linha.add(jSpinnerNumTarefasNo.getValue());
        linha.add(jSpinnerMaxCompNo.getValue());
        linha.add(jSpinnerMinCompNo.getValue());
        linha.add(jSpinnerMaxComuNo.getValue());
        linha.add(jSpinnerMinComuNo.getValue());
        tabelaLinha.add(linha);
        jScrollPaneTabela.setViewportView(jTable1);
    }//GEN-LAST:event_jButtonAddTabelaActionPerformed

    private void jButtonOK1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOK1ActionPerformed
        // TODO add your handling code here:
        if (jRadioButtonRandom.isSelected()) {
            try {
                int numTaref = (Integer) jSpinnerNumTarefas.getValue();
                int minComp = (Integer) jSpinnerMinComputacao.getValue();
                int maxComp = (Integer) jSpinnerMaxComputacao.getValue();
                int aveComp = (Integer) jSpinnerAverageComputacao.getValue();
                double probComp = Double.parseDouble(jSpinnerProbabilityComputacao.getValue().toString());
                int minComun = (Integer) jSpinnerMinComunicacao.getValue();
                int maxComun = (Integer) jSpinnerMaxComunicacao.getValue();
                int aveComun = (Integer) jSpinnerAverageComunicacao.getValue();
                double probComun = Double.parseDouble(jSpinnerProbabilityComunicacao.getValue().toString());
                int timeArriv = (Integer) jSpinnerTimeOfArrival.getValue();
                this.carga = new CargaRandom(numTaref, minComp, maxComp, aveComp, probComp, minComun, maxComun, aveComun, probComun, timeArriv);
            } catch (Exception ex) {
                Logger.getLogger(SelecionaCargas.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (jRadioButtonForNode.isSelected()) {
            try {
                List<GerarCarga> configuracaoNo = new ArrayList(tabelaLinha.size());
                for (Vector item : tabelaLinha) {
                    String aplicacao = item.get(0).toString();
                    String proprietario = item.get(1).toString();
                    String escalonador = item.get(2).toString();
                    int numeroTarefas = Integer.parseInt(item.get(3).toString());
                    double maxComputacao = Double.parseDouble(item.get(4).toString());
                    double minComputacao = Double.parseDouble(item.get(5).toString());
                    double maxComunicacao = Double.parseDouble(item.get(6).toString());
                    double minComunicacao = Double.parseDouble(item.get(7).toString());
                    GerarCarga novoItem = new CargaTaskNode(aplicacao, proprietario, escalonador, numeroTarefas, maxComputacao, minComputacao, maxComunicacao, minComunicacao);
                    configuracaoNo.add(novoItem);
                }
                this.carga = new CargaForNode(configuracaoNo);
            } catch (Exception ex) {
                Logger.getLogger(SelecionaCargas.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            throw new UnsupportedOperationException("Not yet implemented");
        }
        this.setVisible(false);
    }//GEN-LAST:event_jButtonOK1ActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButtonCancelarActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddTabela;
    private javax.swing.JButton jButtonAddUser;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonOK1;
    private javax.swing.JComboBox jComboBoxEscalonadores;
    private javax.swing.JComboBox jComboBoxUsers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelNumberOfTasks;
    private javax.swing.JLabel jLabelNumberOfTasks1;
    private javax.swing.JPanel jPanelForNode;
    private javax.swing.JPanel jPanelModo;
    private javax.swing.JPanel jPanelRandom;
    private javax.swing.JRadioButton jRadioButtonForNode;
    private javax.swing.JRadioButton jRadioButtonRandom;
    private javax.swing.JRadioButton jRadioButtonTraces;
    private javax.swing.JScrollPane jScrollPaneSelecionado;
    private javax.swing.JScrollPane jScrollPaneTabela;
    private javax.swing.JSpinner jSpinnerAverageComputacao;
    private javax.swing.JSpinner jSpinnerAverageComunicacao;
    private javax.swing.JSpinner jSpinnerMaxCompNo;
    private javax.swing.JSpinner jSpinnerMaxComputacao;
    private javax.swing.JSpinner jSpinnerMaxComuNo;
    private javax.swing.JSpinner jSpinnerMaxComunicacao;
    private javax.swing.JSpinner jSpinnerMinCompNo;
    private javax.swing.JSpinner jSpinnerMinComputacao;
    private javax.swing.JSpinner jSpinnerMinComuNo;
    private javax.swing.JSpinner jSpinnerMinComunicacao;
    private javax.swing.JSpinner jSpinnerNumTarefas;
    private javax.swing.JSpinner jSpinnerNumTarefasNo;
    private javax.swing.JSpinner jSpinnerProbabilityComputacao;
    private javax.swing.JSpinner jSpinnerProbabilityComunicacao;
    private javax.swing.JSpinner jSpinnerTimeOfArrival;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    private GerarCarga carga;
    private Vector<String> usuarios;
    private Vector<String> escalonadores;
    private Vector<Vector> tabelaLinha;
    private Vector<String> tabelaColuna = new Vector<String>(7);
    private int tabelaIndex = 0;
    private ResourceBundle palavras;

    GerarCarga getCargasConfiguracao() {
        return carga;
    }
    /**
     * Carrega os valores do gerador de cargas nos componentes da janela
     * @param gerarcarga
     */
    private void setValores(GerarCarga gerarcarga) {
        if (gerarcarga != null) {
            switch (gerarcarga.getTipo()) {
                case GerarCarga.RANDOM:
                    Vector<Integer> aux = gerarcarga.toVector();
                    jSpinnerNumTarefas.setValue(aux.get(0));
                    jSpinnerMinComputacao.setValue(aux.get(1));
                    jSpinnerMaxComputacao.setValue(aux.get(2));
                    jSpinnerAverageComputacao.setValue(aux.get(3));
                    jSpinnerProbabilityComputacao.setValue(aux.get(4));
                    jSpinnerMinComunicacao.setValue(aux.get(5));
                    jSpinnerMaxComunicacao.setValue(aux.get(6));
                    jSpinnerAverageComunicacao.setValue(aux.get(7));
                    jSpinnerProbabilityComunicacao.setValue(aux.get(8));
                    jSpinnerTimeOfArrival.setValue(aux.get(9));
                    setTipo(GerarCarga.RANDOM);
                    break;
                case GerarCarga.FORNODE:
                    this.tabelaLinha.addAll(gerarcarga.toVector());
                    this.tabelaIndex = tabelaLinha.size();
                    setTipo(GerarCarga.FORNODE);
                    break;
                case GerarCarga.TRACE:
                    throw new UnsupportedOperationException("Not yet implemented");
                //break;
            }
        }else{
            setTipo(GerarCarga.RANDOM);
        }
    }

    public HashSet<String> getUsuarios() {
        return new HashSet<String>(usuarios);
    }
    /**
     * Apresenta na janela jPanel e seta valores dos jRadioButton de acordo com tipo informado
     * @param tipo jRadioButton selecionado
     */
    private void setTipo(int tipo) {
        switch (tipo) {
                case GerarCarga.RANDOM:
                    jRadioButtonForNode.setSelected(false);
                    jRadioButtonTraces.setSelected(false);
                    jRadioButtonRandom.setSelected(true);
                    jScrollPaneSelecionado.setViewportView(jPanelRandom);
                break;
                case GerarCarga.FORNODE:
                    jRadioButtonForNode.setSelected(true);
                    jRadioButtonTraces.setSelected(false);
                    jRadioButtonRandom.setSelected(false);
                    jScrollPaneSelecionado.setViewportView(jPanelForNode);
                break;
                case GerarCarga.TRACE:
                    jRadioButtonForNode.setSelected(false);
                    jRadioButtonTraces.setSelected(true);
                    jRadioButtonRandom.setSelected(false);
                    jScrollPaneSelecionado.setViewportView(null);
                break;
            }
    }
}
