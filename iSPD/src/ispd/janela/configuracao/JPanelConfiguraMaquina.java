/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JPanelConfiguraMaquina.java
 *
 * Created on 03/03/2011, 13:27:54
 */
package ispd.janela.configuracao;

import ispd.janela.Icone;
import ispd.ValidaValores;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.ListSelectionModel;

/**
 *
 * @author denison_usuario
 */
public class JPanelConfiguraMaquina extends javax.swing.JPanel {

    private Icone icone;
    private ResourceBundle palavras;

    /** Creates new form JPanelConfiguraMaquina */
    public JPanelConfiguraMaquina() {
        Locale locale = Locale.getDefault();
        palavras = ResourceBundle.getBundle("ispd.idioma.Idioma", locale);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitle = new javax.swing.JLabel();
        jLabelInicial = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jTextFieldPoderComputacional = new javax.swing.JTextField();
        jTextFieldTaxaOcupacao = new javax.swing.JTextField();
        jComboBoxAlgoritmos = new javax.swing.JComboBox();
        jRadioButtonEscravo = new javax.swing.JRadioButton();
        jRadioButtonMestre = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListEscravo = new javax.swing.JList();
        jLabelTextoExtra = new javax.swing.JLabel();

        jLabelTitle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelTitle.setText(palavras.getString("Machine icon configuration")); // NOI18N

        jLabelInicial.setText(palavras.getString("Configuration for the icon") + "#: " + "0");

        jTextFieldNome.setBorder(javax.swing.BorderFactory.createTitledBorder(palavras.getString("Label:")));
        jTextFieldNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldNomeFocusLost(evt);
            }
        });

        jTextFieldPoderComputacional.setBorder(javax.swing.BorderFactory.createTitledBorder(palavras.getString("Computational power:") + " Mflop/s"));
        jTextFieldPoderComputacional.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldPoderComputacionalFocusLost(evt);
            }
        });

        jTextFieldTaxaOcupacao.setBorder(javax.swing.BorderFactory.createTitledBorder(palavras.getString("Load Factor:") + " %"));
        jTextFieldTaxaOcupacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldTaxaOcupacaoFocusLost(evt);
            }
        });

        jComboBoxAlgoritmos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "Round - Robin (RR)", "Workqueue" }));
        jComboBoxAlgoritmos.setBorder(javax.swing.BorderFactory.createTitledBorder(palavras.getString("Scheduling algorithm:")));
        jComboBoxAlgoritmos.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBoxAlgoritmosPropertyChange(evt);
            }
        });

        jRadioButtonEscravo.setText(palavras.getString("SLAVE")); // NOI18N
        jRadioButtonEscravo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonEscravoActionPerformed(evt);
            }
        });

        jRadioButtonMestre.setSelected(true);
        jRadioButtonMestre.setText(palavras.getString("MASTER")); // NOI18N
        jRadioButtonMestre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMestreActionPerformed(evt);
            }
        });

        jListEscravo.setBorder(javax.swing.BorderFactory.createTitledBorder(palavras.getString("Slave Nodes:")));
        jListEscravo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jListEscravoFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(jListEscravo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(288, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jRadioButtonEscravo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonMestre)
                .addContainerGap(287, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabelInicial)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addComponent(jTextFieldPoderComputacional, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addComponent(jTextFieldTaxaOcupacao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addComponent(jLabelTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                .addGap(241, 241, 241))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTextoExtra)
                .addContainerGap(397, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jComboBoxAlgoritmos, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabelTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelInicial)
                .addGap(13, 13, 13)
                .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldPoderComputacional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jTextFieldTaxaOcupacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonEscravo)
                    .addComponent(jRadioButtonMestre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxAlgoritmos, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelTextoExtra)
                .addGap(122, 122, 122))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNomeFocusLost
        // TODO add your handling code here:
        if (ValidaValores.NomeIconeNaoExiste(jTextFieldNome.getText()) && ValidaValores.validaNomeIcone(jTextFieldNome.getText())) {
            ValidaValores.removeNomeIcone(icone.getNome());
            icone.setNome(jTextFieldNome.getText());
            ValidaValores.addNomeIcone(jTextFieldNome.getText());
        }
}//GEN-LAST:event_jTextFieldNomeFocusLost

    private void jTextFieldPoderComputacionalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPoderComputacionalFocusLost
        // TODO add your handling code here:
        if (ValidaValores.validaDouble(jTextFieldPoderComputacional.getText())) {
            icone.setPoderComputacional(Double.parseDouble(jTextFieldPoderComputacional.getText()));
        }
}//GEN-LAST:event_jTextFieldPoderComputacionalFocusLost

    private void jComboBoxAlgoritmosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBoxAlgoritmosPropertyChange
        // TODO add your handling code here:
        if (icone != null) {
            switch (jComboBoxAlgoritmos.getSelectedIndex()) {
                case 0:
                    icone.setAlgoritmo("---");
                    break;
                case 1:
                    icone.setAlgoritmo("RoundRobin");
                    break;
                case 2:
                    icone.setAlgoritmo("Workqueue");
                    break;
            }
        }
}//GEN-LAST:event_jComboBoxAlgoritmosPropertyChange

    private void jTextFieldTaxaOcupacaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldTaxaOcupacaoFocusLost
        // TODO add your handling code here:
        if (ValidaValores.validaDouble(jTextFieldTaxaOcupacao.getText())) {
            icone.setTaxaOcupacao(Double.parseDouble(jTextFieldTaxaOcupacao.getText()));
        }
}//GEN-LAST:event_jTextFieldTaxaOcupacaoFocusLost

    private void jRadioButtonEscravoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonEscravoActionPerformed
        // TODO add your handling code here:
        if (jRadioButtonEscravo.isSelected()) {
            jRadioButtonMestre.setSelected(false);
            jComboBoxAlgoritmos.setVisible(false);
            jListEscravo.setVisible(false);
            jScrollPane1.setVisible(false);
            icone.setMestre(false);
        } else {
            jRadioButtonMestre.setSelected(true);
            jComboBoxAlgoritmos.setVisible(true);
            jListEscravo.setVisible(true);
            jScrollPane1.setVisible(true);
            icone.setMestre(true);
        }
    }//GEN-LAST:event_jRadioButtonEscravoActionPerformed

    private void jRadioButtonMestreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMestreActionPerformed
        // TODO add your handling code here:
        if (jRadioButtonMestre.isSelected()) {
            jRadioButtonEscravo.setSelected(false);
            jComboBoxAlgoritmos.setVisible(true);
            jListEscravo.setVisible(true);
            jScrollPane1.setVisible(true);
            icone.setMestre(true);
        } else {
            jRadioButtonEscravo.setSelected(true);
            jComboBoxAlgoritmos.setVisible(false);
            jListEscravo.setVisible(false);
            jScrollPane1.setVisible(false);
            icone.setMestre(false);
        }
    }//GEN-LAST:event_jRadioButtonMestreActionPerformed

    private void jListEscravoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jListEscravoFocusLost
        // TODO add your handling code here:
        if (icone != null) {
            Vector<Integer> listaConectados = icone.getNosEscalonaveis();
            int indices[] = jListEscravo.getSelectedIndices();
            List<Integer> escravos = new ArrayList<Integer>();
            for (int i = 0; i < indices.length; i++) {
                escravos.add(listaConectados.get(indices[i]));
            }
            icone.setEscravos(escravos);
        }
    }//GEN-LAST:event_jListEscravoFocusLost
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBoxAlgoritmos;
    private javax.swing.JLabel jLabelInicial;
    private javax.swing.JLabel jLabelTextoExtra;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JList jListEscravo;
    private javax.swing.JRadioButton jRadioButtonEscravo;
    private javax.swing.JRadioButton jRadioButtonMestre;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldPoderComputacional;
    private javax.swing.JTextField jTextFieldTaxaOcupacao;
    // End of variables declaration//GEN-END:variables

    public void setIcone(Icone icone) {
        this.icone = icone;
        this.jLabelInicial.setText(palavras.getString("Configuration for the icon") + "#: " + String.valueOf(icone.getIdGlobal()));
        this.jTextFieldNome.setText(icone.getNome());
        this.jTextFieldPoderComputacional.setText(String.valueOf(icone.getPoderComputacional()));
        this.jTextFieldTaxaOcupacao.setText(String.valueOf(icone.getTaxaOcupacao()));
        if (icone.isMestre()) {
            jRadioButtonEscravo.setSelected(false);
            jRadioButtonMestre.setSelected(true);
            jComboBoxAlgoritmos.setVisible(true);
            jListEscravo.setVisible(true);
            jScrollPane1.setVisible(true);
        } else {
            jRadioButtonEscravo.setSelected(true);
            jRadioButtonMestre.setSelected(false);
            jComboBoxAlgoritmos.setVisible(false);
            jListEscravo.setVisible(false);
            jScrollPane1.setVisible(false);
        }
        if (icone.getAlgoritmo() != null) {
            if (icone.getAlgoritmo().equals("---")) {
                jComboBoxAlgoritmos.setSelectedIndex(0);
            } else if (icone.getAlgoritmo().equals("RoundRobin")) {
                jComboBoxAlgoritmos.setSelectedIndex(1);
            } else {
                jComboBoxAlgoritmos.setSelectedIndex(2);
            }
        }
        jListEscravo.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        DefaultListModel listModel = new DefaultListModel();
        for (int i = 0; i < icone.getNosEscalonaveis().size(); i++) {
            listModel.addElement(icone.getNosEscalonaveis().get(i));
        }
        jListEscravo.setModel(listModel);
        List<Integer> escravos = icone.getEscravos();
        Vector<Integer> listaConectados = icone.getNosEscalonaveis();
        int tempIndices[] = new int[escravos.size()];
        int x = 0;
        for (int i : escravos) {
            tempIndices[x] = listaConectados.indexOf(i);
            x++;
        }
        jListEscravo.setSelectedIndices(tempIndices);
    }

    public void setTextoExtra(String Texto) {
        this.jLabelTextoExtra.setText(Texto);
    }

    public void setIdioma(ResourceBundle palavras) {
        this.palavras = palavras;
        initTexts();
    }

    private void initTexts() {
        jLabelTitle.setText(palavras.getString("Machine icon configuration"));
        if (icone == null) {
            jLabelInicial.setText(palavras.getString("Configuration for the icon") + "#: 0");
        } else {
            jLabelInicial.setText(palavras.getString("Configuration for the icon") + "#: " + String.valueOf(icone.getIdGlobal()));
        }
        jTextFieldNome.setBorder(javax.swing.BorderFactory.createTitledBorder(palavras.getString("Label:")));
        jTextFieldPoderComputacional.setBorder(javax.swing.BorderFactory.createTitledBorder(palavras.getString("Computational power:") + " Mflop/s"));
        jTextFieldTaxaOcupacao.setBorder(javax.swing.BorderFactory.createTitledBorder(palavras.getString("Load Factor:") + " %"));
        jRadioButtonEscravo.setText(palavras.getString("SLAVE"));
        jRadioButtonMestre.setText(palavras.getString("MASTER"));
        jComboBoxAlgoritmos.setBorder(javax.swing.BorderFactory.createTitledBorder(palavras.getString("Scheduling algorithm:")));
        jListEscravo.setBorder(javax.swing.BorderFactory.createTitledBorder(palavras.getString("Slave Nodes:")));
    }
}
