/* Generated By:JavaCC: Do not edit this line. InterpretadorConstants.java */
package ispd.arquivo.interpretador.gerador;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface InterpretadorConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SCHEDULER = 1;
  /** RegularExpression Id. */
  int STATIC = 2;
  /** RegularExpression Id. */
  int DYNAMIC = 3;
  /** RegularExpression Id. */
  int TASK = 4;
  /** RegularExpression Id. */
  int ENTRY = 5;
  /** RegularExpression Id. */
  int OUTPUT = 6;
  /** RegularExpression Id. */
  int TIME = 7;
  /** RegularExpression Id. */
  int INTERVAL = 8;
  /** RegularExpression Id. */
  int RANDOM = 9;
  /** RegularExpression Id. */
  int CRESCENT = 10;
  /** RegularExpression Id. */
  int DECREASING = 11;
  /** RegularExpression Id. */
  int RESOURCE = 12;
  /** RegularExpression Id. */
  int tTamComp = 13;
  /** RegularExpression Id. */
  int tTamComu = 14;
  /** RegularExpression Id. */
  int tNumTarSub = 15;
  /** RegularExpression Id. */
  int tNumTarConc = 16;
  /** RegularExpression Id. */
  int tPoderUser = 17;
  /** RegularExpression Id. */
  int rPodeProc = 18;
  /** RegularExpression Id. */
  int rLinkComu = 19;
  /** RegularExpression Id. */
  int rtamCompTar = 20;
  /** RegularExpression Id. */
  int rtamComuTar = 21;
  /** RegularExpression Id. */
  int numTarExec = 22;
  /** RegularExpression Id. */
  int mult = 23;
  /** RegularExpression Id. */
  int div = 24;
  /** RegularExpression Id. */
  int sub = 25;
  /** RegularExpression Id. */
  int add = 26;
  /** RegularExpression Id. */
  int lparen = 27;
  /** RegularExpression Id. */
  int rparen = 28;
  /** RegularExpression Id. */
  int inteiro = 29;
  /** RegularExpression Id. */
  int real = 30;
  /** RegularExpression Id. */
  int nome = 31;
  /** RegularExpression Id. */
  int invalido = 43;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int multilinecoment = 1;
  /** Lexical state. */
  int singlelinecoment = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"SCHEDULER\"",
    "\"STATIC\"",
    "\"DYNAMIC\"",
    "\"TASK\"",
    "\"ENTRY\"",
    "\"OUTPUT\"",
    "\"TIME\"",
    "\"INTERVAL\"",
    "\"RANDOM\"",
    "\"CRESCENT\"",
    "\"DECREASING\"",
    "\"RESOURCE\"",
    "\"[TCP]\"",
    "\"[TC]\"",
    "\"[NTS]\"",
    "\"[NTC]\"",
    "\"[PCU]\"",
    "\"[PP]\"",
    "\"[LC]\"",
    "\"[TCT]\"",
    "\"[TCMT]\"",
    "\"[NTE]\"",
    "\"*\"",
    "\"/\"",
    "\"-\"",
    "\"+\"",
    "\"(\"",
    "\")\"",
    "<inteiro>",
    "<real>",
    "<nome>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"*/\"",
    "<token of kind 38>",
    "<token of kind 39>",
    "<token of kind 40>",
    "\"/*\"",
    "\"//\"",
    "<invalido>",
    "\":\"",
    "\"[\"",
    "\"]\"",
  };

}
